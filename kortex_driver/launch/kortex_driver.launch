<?xml version="1.0"?>
<launch>
    <arg name="arm" default="gen3"/>
    <arg name="dof" default="7"/>
    <arg name="vision" default="true"/>
    <arg name="use_hard_limits" default="false"/>

    <arg name="gripper" default="robotiq_2f_85"/>

    <arg name="robot_name" default="my_$(arg arm)"/>
    <arg name="prefix" default=""/>

    <arg name="ip_address" default="192.168.1.10"/>
    <arg name="username" default="admin"/>
    <arg name="password" default="admin"/>
    <arg name="cyclic_data_publish_rate" default="40"/>
    <arg name="api_rpc_timeout_ms" default="2000"/> 
    <arg name="api_session_inactivity_timeout_ms" default="35000"/> 
    <arg name="api_connection_inactivity_timeout_ms" default="20000"/> 

    <arg name="start_rviz" default="true"/>
    <arg name="start_moveit" default="true"/>

    <arg name="default_goal_time_tolerance" default="0.5"/> 
    <arg name="default_goal_tolerance" default="0.005"/>

    <!-- <group ns="$(arg robot_name)"> -->
    <group>
        <group>
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find kortex_description)/robots/$(arg arm)_$(arg gripper).xacro dof:=$(arg dof) vision:=$(arg vision) sim:=false"/>
        </group>

        <node name="$(arg robot_name)_driver" pkg="kortex_driver" type="kortex_arm_driver" output="screen"> <!--launch-prefix="gdb -ex run args"-->
            <param name="sim" value="false"/>
            <param name="ip_address" value="$(arg ip_address)"/>
            <param name="username" value="$(arg username)"/>
            <param name="password" value="$(arg password)"/>
            <param name="cyclic_data_publish_rate" value="$(arg cyclic_data_publish_rate)"/>
            <param name="api_rpc_timeout_ms" value="$(arg api_rpc_timeout_ms)"/>
            <param name="api_session_inactivity_timeout_ms" value="$(arg api_session_inactivity_timeout_ms)"/>
            <param name="api_connection_inactivity_timeout_ms" value="$(arg api_connection_inactivity_timeout_ms)"/>
            <param name="default_goal_time_tolerance" value="$(arg default_goal_time_tolerance)"/>
            <param name="default_goal_tolerance" value="$(arg default_goal_tolerance)"/>
            <param name="arm" value="$(arg arm)"/>
            <param name="gripper" value="$(arg gripper)"/>
            <param name="dof" value="$(arg dof)"/>
            <param name="use_hard_limits" value="$(arg use_hard_limits)"/>
            <param name="robot_name" value="$(arg robot_name)"/>
            <param name="prefix" value="$(arg prefix)"/>
            <rosparam command="load" file="$(find kortex_description)/arms/$(arg arm)/$(arg dof)dof/config/joint_limits.yaml" subst_value="true"/>
            <rosparam command="load" file="$(find kortex_description)/grippers/$(arg gripper)/config/joint_limits.yaml" subst_value="true"/>
        </node>
        
        <group if="$(arg start_moveit)">
            <include file="$(find kortex_description)/../kortex_move_it_config/$(arg arm)_$(arg gripper)_move_it_config/launch/move_group.launch"> 
                <arg name="dof" value="$(arg dof)"/>
                <arg name="use_hard_limits" value="$(arg use_hard_limits)"/>
                <arg name="prefix" value="$(arg prefix)"/>
            </include>
        </group>

        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <rosparam param="source_list">[base_feedback/joint_state]</rosparam>
            <param name="rate" value="$(arg cyclic_data_publish_rate)" />
        </node>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

        <!-- Start RViz
        <node name="rviz" pkg="rviz" type="rviz" output="log" args="-f base_link" if="$(arg start_rviz)"/>  -->

        <node name="rviz" pkg="rviz" type="rviz" output="log" args="-d $(find feeding_task)/config/default.rviz" if="$(arg start_rviz)"/>
    </group>
</launch>
